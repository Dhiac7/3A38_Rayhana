# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration

parameters:
    uploads_directory: '%kernel.project_dir%/public/img/users'
    image_directory: '%kernel.project_dir%/public/img/stock'
    atelier_directory: '%kernel.project_dir%/public/img/atelier'
    stripe_secret_key: '%env(STRIPE_SECRET_KEY)%'
    face_recognition_script: '%kernel.project_dir%/python/recognize_faces.py'
    users_image_path: '%kernel.project_dir%/public/img/users'


    

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        bind:
            $pythonScriptPath: '%face_recognition_script%'
            $usersImagePath: '%users_image_path%'
    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
    App\Service\EmailMessageHandler:
        arguments:
            $mailer: '@Symfony\Component\Mailer\MailerInterface'
        tags: ['messenger.message_handler']

    App\Service\WeatherService:
        arguments:
            $apiKey: '%env(OPENWEATHER_API_KEY)%'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

