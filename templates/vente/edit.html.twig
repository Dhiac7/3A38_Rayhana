{% extends 'baseAdmin.html.twig' %}

{% block title %}Modifier Vente{% endblock %}

{% block body %}
<div class="main-panel">
    <div class="content-wrapper">
        <!-- Page Header -->
        <div class="page-header">
            <h3 class="page-title">
                <span class="page-title-icon bg-gradient-primary text-white me-2">
                    <i class="mdi mdi-cart"></i>
                </span> Ventes
            </h3>
            <nav aria-label="breadcrumb">
                <ul class="breadcrumb">
                    <li class="breadcrumb-item active" aria-current="page">
                        <span></span>Overview <i class="mdi mdi-alert-circle-outline icon-sm text-primary align-middle"></i>
                    </li>
                </ul>
            </nav>
        </div>
        <div class="col-12 grid-margin stretch-card">
            <div class="card">
                <div class="card-body">
                    <h4 class="card-title">Modifier Vente</h4>
                    <p class="card-description">Mettre à jour les informations de la vente</p>

                    {{ form_start(form, {'attr': {'class': 'forms-sample', 'novalidate': 'novalidate'}}) }}

                    <!-- Nom du produit -->
                    <div class="form-group">
                        <label>Nom du produit</label>
                        <input type="text" class="form-control" value="{{ vente.produit.nom }}" readonly>
                    </div>

                    <!-- Quantité -->
                    <div class="form-group">
                        {{ form_label(form.quantite, 'Quantité', {'label_attr': {'class': 'form-label'}}) }}
                        {{ form_widget(form.quantite, { 'attr': {'class': 'form-control', 'id': 'vente_quantite'} }) }}
                        <div {{ form_errors(form.quantite) ? 'class="text-danger"' : '' }}>
                            {{ form_errors(form.quantite) }}
                        </div>
                    </div>

                    <!-- Prix Total -->
                    <div class="form-group">
                        {{ form_label(form.prix, 'Prix Total (€)', {'label_attr': {'class': 'form-label'}}) }}
                        {{ form_widget(form.prix, { 'attr': {'class': 'form-control', 'id': 'vente_prix', 'readonly': true} }) }}
                        <div {{ form_errors(form.prix) ? 'class="text-danger"' : '' }}>
                            {{ form_errors(form.prix) }}
                        </div>
                    </div>

                    <!-- Méthode de Paiement -->
                    <div class="form-group">
                        {{ form_label(form.methodepayement, 'Méthode de paiement', {'label_attr': {'class': 'form-label'}}) }}
                        {{ form_widget(form.methodepayement, { 'attr': {'class': 'form-select'} }) }}
                        <div {{ form_errors(form.methodepayement) ? 'class="text-danger"' : '' }}>
                            {{ form_errors(form.methodepayement) }}
                        </div>
                    </div>

                    <!-- Boutons -->
                    <button type="submit" class="btn btn-gradient-primary me-2">
                        <i class="fas fa-save"></i> Mettre à jour
                    </button>
                    <a href="{{ path('app_vente_index') }}" class="btn btn-light">
                        <i class="fas fa-arrow-left"></i> Retour
                    </a>

                    {{ form_end(form) }}
                </div>
            </div>
        </div>
    </div>
</div>

{% block javascripts %}
<script>
    document.addEventListener("DOMContentLoaded", function () {
        let quantiteInput = document.getElementById("vente_quantite");
        let prixUnitaire = {{ vente.produit.prixVente|default(0) }};
        let prixTotalInput = document.getElementById("vente_prix");
        let availableQuantity = {{ vente.produit.quantite|default(0) }};

        function updatePrixTotal() {
            let quantite = parseInt(quantiteInput.value) || 0;
            let prixTotal = quantite * prixUnitaire;
            prixTotalInput.value = prixTotal.toFixed(2);
        }

        function validateQuantity() {
            let quantite = parseInt(quantiteInput.value) || 0;
            if (quantite > availableQuantity) {
                alert("La quantité ne peut pas être supérieure à la quantité disponible !");
                quantiteInput.value = availableQuantity;
                updatePrixTotal();
            }
        }

        quantiteInput.addEventListener("input", function () {
            updatePrixTotal();
            validateQuantity();
        });

        updatePrixTotal();
    });
</script>
{% endblock %}
{% endblock %}
