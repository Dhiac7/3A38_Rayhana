{% extends 'baseAdmin.html.twig' %}

{% block title %}Edit Vente{% endblock %}

{% block body %}
<div class="contact-area contact-page overflow-hidden bg-gray default-padding">
    <div class="sahpe-right-bottom">
        <img src="{{ asset('assets/img/shape/16.png') }}" alt="Image Not Found">
    </div>
    <div class="container">
        <div class="row align-center">
            <div class="col-tact-stye-one col-xl-12 col-lg-12">
                <div class="row">
                    <div class="col-lg-6">
                        <div class="contact-form-style-one mb-md-50">
                            <h5 class="sub-title">Modifier la Vente</h5>
                            <h2 class="heading">Informations de la vente</h2>

                            {# Start Symfony Form #}
                            {{ form_start(form, {'attr': {'novalidate': 'novalidate', 'class': 'contact-form'}}) }}

                                {# Display global form errors #}
                                {% for error in form.vars.errors %}
                                    <div class="alert alert-danger">{{ error.message }}</div>
                                {% endfor %}

                                <div class="row">
                                    <!-- Nom du produit via vente -->
                                    <div class="col-lg-12">
                                        <div class="form-group">
                                            <label>Nom du produit</label>
                                            <input type="text" class="form-control" value="{{ vente.produit.nom }}" readonly>
                                        </div>
                                    </div>

                                    <!-- Quantité (From Vente) -->
                                    <div class="col-lg-12">
                                        <div class="form-group">
                                            {{ form_label(form.quantite, 'Quantité') }}
                                            {{ form_widget(form.quantite, {'attr': {'class': 'form-control', 'id': 'vente_quantite'}}) }}
                                            {{ form_errors(form.quantite) }}
                                        </div>
                                    </div>

                                    <!-- Prix (From Vente) -->
                                    <div class="col-lg-12">
                                        <div class="form-group">
                                            {{ form_label(form.prix, 'Prix Total (€)') }}
                                            {{ form_widget(form.prix, {'attr': {'class': 'form-control', 'id': 'vente_prix', 'readonly': true}}) }}
                                            {{ form_errors(form.prix) }}
                                        </div>
                                    </div>

                                    <!-- Prix Unitaire (Hidden) -->
                                    {{ form_widget(form.prixUnitaire, {'attr': {'id': 'vente_prixUnitaire'}}) }}

                                    <!-- Méthode de Paiement -->
                                    <div class="col-lg-12">
                                        <div class="form-group">
                                            {{ form_label(form.methodepayement, 'Méthode de paiement') }}
                                            {{ form_widget(form.methodepayement, {'attr': {'class': 'form-control'}}) }}
                                            {{ form_errors(form.methodepayement) }}
                                        </div>
                                    </div>
                                </div>

                                <!-- Bouton d'enregistrement -->
                                <div class="row">
                                    <button type="submit" class="btn btn-primary" id="submit-btn">Enregistrer</button>
                                </div>

                            {{ form_end(form) }}
                            {# End Symfony Form #}
                        </div>
                    </div>

                    <!-- Product Information -->
                    <div class="col-lg-6">
                        <div class="product-info">
                            <h3>Informations du Produit</h3>
                            {% if vente.produit is defined %}
                                <p><strong>Nom du produit:</strong> {{ vente.produit.nom }}</p>
                                <p><strong>Quantité Disponible:</strong> {{ vente.produit.quantite }}</p>
                                <p><strong>Prix de Vente:</strong> {{ vente.produit.prixVente }} €</p>
                            {% else %}
                                <p class="text-danger">Aucun produit associé.</p>
                            {% endif %}
                        </div>

                        <!-- Illustration -->
                        <img src="{{ asset('img/illustration/21.png') }}" alt="Image Not Found" class="img-fluid">
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

{% block javascripts %}
<script>
    document.addEventListener("DOMContentLoaded", function () {
        let quantiteInput = document.getElementById("vente_quantite");
        let prixUnitaireInput = document.getElementById("vente_prixUnitaire");
        let prixTotalInput = document.getElementById("vente_prix");
        let submitButton = document.getElementById("submit-btn");
        let availableQuantity = {{ vente.produit.quantite|default(0) }};  // Get the available quantity from the product

        // Function to update the total price based on quantity and unit price
        function updatePrixTotal() {
            let quantite = parseInt(quantiteInput.value) || 0;
            let prixUnitaire = parseFloat(prixUnitaireInput.value) || 0;
            let prixTotal = quantite * prixUnitaire;

            // Update the total price field
            prixTotalInput.value = prixTotal.toFixed(2);
        }

        // Validate quantity input to ensure it's within the available stock
        function validateQuantity() {
            let quantite = parseInt(quantiteInput.value) || 0;

            // If the entered quantity exceeds the available quantity, show an alert and reset the input
            if (quantite > availableQuantity) {
                alert("La quantité ne peut pas être supérieure à la quantité disponible !");
                quantiteInput.value = availableQuantity;  // Reset the quantity to the available stock
                updatePrixTotal();  // Recalculate the price with the adjusted quantity
            }
        }

        // Listen for changes in the quantity input field
        quantiteInput.addEventListener("input", function () {
            updatePrixTotal();
            validateQuantity();  // Validate the quantity as the user types
        });

        // Initialize total price on page load
        updatePrixTotal();
    });
</script>
{% endblock %}
{% endblock %}
