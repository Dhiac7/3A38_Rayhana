{% extends 'baseAdmin.html.twig' %}

{% block body %}
<div class="main-panel">
  <div class="content-wrapper">
    <div class="col-12 grid-margin">
      <div class="card">
        <div class="card-body">
          <h4 class="card-title">Modifier un Atelier</h4>
          <p class="card-description">Mettez à jour les informations</p>

          {{ form_start(form, {'attr': {'novalidate': 'novalidate', 'class': 'forms-sample'}}) }}

          {% for error in form.vars.errors %}
              <div class="text-danger">{{ error.message }}</div>
          {% endfor %}
          {% for label, messages in app.flashes %}
              {% for message in messages %}
                  <div class="alert alert-{{ label }}">{{ message }}</div>
              {% endfor %}
          {% endfor %}

          <div class="row">
            <div class="col-md-6 form-group">
              {{ form_label(form.nom, 'Nom') }}
              {{ form_widget(form.nom, {'attr': {'class': 'form-control', 'placeholder': 'Nom de l\'atelier'}}) }}
              {{ form_errors(form.nom) }}
            </div>
            <div class="col-md-6 form-group">
              {{ form_label(form.description, 'Description') }}
              {{ form_widget(form.description, {'attr': {'class': 'form-control', 'placeholder': 'Description'}}) }}
              {{ form_errors(form.description) }}
            </div>
          </div>

          <div class="row">
            <div class="col-md-6 form-group">
              {{ form_label(form.date_atelier, 'Date de l\'atelier') }}
              {{ form_widget(form.date_atelier, {'attr': {'class': 'form-control'}}) }}
              {{ form_errors(form.date_atelier) }}
            </div>
            <div class="col-md-6 form-group">
              {{ form_label(form.capacite_max, 'Capacité max') }}
              {{ form_widget(form.capacite_max, {'attr': {'class': 'form-control', 'placeholder': 'Capacité max'}}) }}
              {{ form_errors(form.capacite_max) }}
            </div>
          </div>

          <div class="row">
            <div class="col-md-6 form-group">
              {{ form_label(form.prix, 'Prix') }}
              {{ form_widget(form.prix, {'attr': {'class': 'form-control', 'placeholder': 'Prix en TND'}}) }}
              {{ form_errors(form.prix) }}
            </div>
            <div class="col-md-6 form-group">
              {{ form_label(form.statut, 'Statut') }}
              {{ form_widget(form.statut, {'attr': {'class': 'form-select'}}) }}
              {{ form_errors(form.statut) }}
            </div>
          </div>

          <div class="row">
            <div class="col-md-6 form-group">
              {{ form_label(form.photo, "Photo de l'atelier") }}
              {{ form_widget(form.photo, {'attr': {'class': 'form-control-file'}}) }}
              {{ form_errors(form.photo) }}

              {% if form.vars.value.photo %}
                <p>Image actuelle :</p>
                <img src="{{ asset('uploads/' ~ form.vars.value.photo) }}" alt="Photo actuelle" class="img-thumbnail" width="200">
              {% endif %}
            </div>
          </div>

          <div class="row">
            <div class="col-md-6">
              {{ form_widget(form.save, {'attr': {'class': 'btn btn-gradient-success'}}) }}
              <button type="submit" class="btn btn-gradient-light">Annuler</button>
            </div>
          </div>
          {{ form_end(form) }}

        </div>
      </div>
    </div>
  </div>
</div>

<!-- SCRIPT AJAX -->
<script>
  document.addEventListener("DOMContentLoaded", function () {
    function fetchAteliers(sortOrder = "", searchQuery = "") {
      let url = "{{ path('atelier_list_ajax') }}?sort=" + sortOrder + "&search=" + searchQuery;

      fetch(url)
        .then(response => response.text())
        .then(data => {
          document.getElementById("atelier-container").innerHTML = data;
          attachDeleteListeners(); // Réattacher les événements après mise à jour
        });
    }

    function attachDeleteListeners() {
      document.querySelectorAll(".btn-delete").forEach(button => {
        button.addEventListener("click", function (event) {
          event.preventDefault();

          let atelierId = this.getAttribute("data-id");

          if (confirm("Voulez-vous vraiment supprimer cet atelier ?")) {
            fetch(`/atelier/delete/${atelierId}`, {
              method: "DELETE",
              headers: { "X-Requested-With": "XMLHttpRequest" }
            })
            .then(response => response.json())
            .then(data => {
              if (data.success) {
                document.querySelector(`.atelier-card[data-id='${atelierId}']`).remove();
              } else {
                alert("Erreur lors de la suppression");
              }
            })
            .catch(error => console.error("Erreur:", error));
          }
        });
      });
    }

    attachDeleteListeners(); // Initialiser les événements au chargement de la page

    // Recherche en temps réel 
    
    document.getElementById("search").addEventListener("input", function () {
      fetchAteliers("", this.value);
    });

    // Tri croissant
    document.getElementById("sortAsc").addEventListener("click", function () {
      fetchAteliers("asc", document.getElementById("search").value);
    });

    // Tri décroissant
    document.getElementById("sortDesc").addEventListener("click", function () {
      fetchAteliers("desc", document.getElementById("search").value);
    });

    // Chargement initial des ateliers
    fetchAteliers();
  });
</script>

{% endblock %}
